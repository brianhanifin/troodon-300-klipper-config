#### crowsnest.conf
#### This is a typical default config.
#### Also used as default in mainsail / MainsailOS
#### See:
#### https://github.com/mainsail-crew/crowsnest/blob/master/README.md
#### for details to configure to your needs.


#####################################################################
####                                                            #####
####      Information about ports and according URL's           #####
####                                                            #####
#####################################################################
####                                                            #####
####    Port 8080 equals /webcam/?action=[stream/snapshot]      #####
####    Port 8081 equals /webcam2/?action=[stream/snapshot]     #####
####    Port 8082 equals /webcam3/?action=[stream/snapshot]     #####
####    Port 8083 equals /webcam4/?action=[stream/snapshot]     #####
####                                                            #####
#####################################################################
####    RTSP Stream URL: ( if enabled and supported )           #####
####    rtsp://<ip>:<rtsp_port>/stream.h264                     #####
#####################################################################


[crowsnest]
log_path: /home/brian/printer_data/logs/crowsnest.log
log_level: debug #verbose                      # Valid Options are quiet/verbose/debug
delete_log: true                        # Deletes log on every restart, if set to true
no_proxy: false

[cam bed]
mode: camera-streamer                   # ustreamer - Provides mjpg and snapshots. (All devices)
                                        # camera-streamer - Provides webrtc, mjpg and snapshots. (rpi + Raspi OS based only)
#enable_rtsp: true                       # If camera-streamer is used, this enables also usage of an rtsp server
#rtsp_port: 8554                         # Set different ports for each device!
port: 8080                              # HTTP/MJPG Stream/Snapshot Port
device: /base/soc/i2c0mux/i2c@1/imx219@10  # See Log for available ...
resolution: 3280x2464                   # widthxheight format
max_fps: 15                             # If Hardware Supports this it will be forced, otherwise ignored/coerced.
#custom_flags:                          # You can run the Stream Services with custom flags.
#v4l2ctl:                               # Add v4l2-ctl parameters to setup your camera, see Log what your cam is capable of.

# brian@troodon:~ $ libcamera-hello --list-cameras
# Available cameras
# -----------------
# 0 : imx219 [3280x2464] (/base/soc/i2c0mux/i2c@1/imx219@10)
#     Modes: 'SRGGB10_CSI2P' : 640x480 [103.33 fps - (1000, 752)/1280x960 crop]
#                              1640x1232 [41.85 fps - (0, 0)/3280x2464 crop]
#                              1920x1080 [47.57 fps - (680, 692)/1920x1080 crop]
#                              3280x2464 [21.19 fps - (0, 0)/3280x2464 crop]
#            'SRGGB8' : 640x480 [103.33 fps - (1000, 752)/1280x960 crop]
#                       1640x1232 [41.85 fps - (0, 0)/3280x2464 crop]
#                       1920x1080 [47.57 fps - (680, 692)/1920x1080 crop]
#                       3280x2464 [21.19 fps - (0, 0)/3280x2464 crop]
#
# brian@troodon:~ $ v4l2-ctl --list-formats-ext
# ioctl: VIDIOC_ENUM_FMT
# 	Type: Video Capture
#
# 	[0]: 'YUYV' (YUYV 4:2:2)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[1]: 'UYVY' (UYVY 4:2:2)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[2]: 'YVYU' (YVYU 4:2:2)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[3]: 'VYUY' (VYUY 4:2:2)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[4]: 'RGBP' (16-bit RGB 5-6-5)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[5]: 'RGBR' (16-bit RGB 5-6-5 BE)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[6]: 'RGBO' (16-bit A/XRGB 1-5-5-5)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[7]: 'RGBQ' (16-bit A/XRGB 1-5-5-5 BE)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[8]: 'RGB3' (24-bit RGB 8-8-8)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[9]: 'BGR3' (24-bit BGR 8-8-8)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[10]: 'RGB4' (32-bit A/XRGB 8-8-8-8)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[11]: 'BA81' (8-bit Bayer BGBG/GRGR)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[12]: 'GBRG' (8-bit Bayer GBGB/RGRG)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[13]: 'GRBG' (8-bit Bayer GRGR/BGBG)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[14]: 'RGGB' (8-bit Bayer RGRG/GBGB)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[15]: 'pBAA' (10-bit Bayer BGBG/GRGR Packed)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[16]: 'BG10' (10-bit Bayer BGBG/GRGR)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[17]: 'pGAA' (10-bit Bayer GBGB/RGRG Packed)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[18]: 'GB10' (10-bit Bayer GBGB/RGRG)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[19]: 'pgAA' (10-bit Bayer GRGR/BGBG Packed)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[20]: 'BA10' (10-bit Bayer GRGR/BGBG)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[21]: 'pRAA' (10-bit Bayer RGRG/GBGB Packed)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[22]: 'RG10' (10-bit Bayer RGRG/GBGB)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[23]: 'pBCC' (12-bit Bayer BGBG/GRGR Packed)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[24]: 'BG12' (12-bit Bayer BGBG/GRGR)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[25]: 'pGCC' (12-bit Bayer GBGB/RGRG Packed)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[26]: 'GB12' (12-bit Bayer GBGB/RGRG)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[27]: 'pgCC' (12-bit Bayer GRGR/BGBG Packed)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[28]: 'BA12' (12-bit Bayer GRGR/BGBG)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[29]: 'pRCC' (12-bit Bayer RGRG/GBGB Packed)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[30]: 'RG12' (12-bit Bayer RGRG/GBGB)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[31]: 'pBEE' (14-bit Bayer BGBG/GRGR Packed)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[32]: 'BG14' (14-bit Bayer BGBG/GRGR)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[33]: 'pGEE' (14-bit Bayer GBGB/RGRG Packed)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[34]: 'GB14' (14-bit Bayer GBGB/RGRG)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[35]: 'pgEE' (14-bit Bayer GRGR/BGBG Packed)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[36]: 'GR14' (14-bit Bayer GRGR/BGBG)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[37]: 'pREE' (14-bit Bayer RGRG/GBGB Packed)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[38]: 'RG14' (14-bit Bayer RGRG/GBGB)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[39]: 'GREY' (8-bit Greyscale)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[40]: 'Y10P' (10-bit Greyscale (MIPI Packed))
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[41]: 'Y10 ' (10-bit Greyscale)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[42]: 'Y12P' (12-bit Greyscale (MIPI Packed))
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[43]: 'Y12 ' (12-bit Greyscale)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[44]: 'Y14P' (14-bit Greyscale (MIPI Packed))
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
# 	[45]: 'Y14 ' (14-bit Greyscale)
# 		Size: Stepwise 16x16 - 16376x16376 with step 1/1
